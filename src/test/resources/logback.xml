<?xml version="1.0" encoding="UTF-8"?>
<configuration debug="true" scan="true" scanPeriod="30 seconds">
	<!-- 设置日志输出根目录 -->
	<property name="log.dir" value="/data/tomcatlogs/atomikos/logs" />
	<property name="encoding" value="UTF-8" />
	<property name="normal-pattern" value="%d{yyyy-MM-dd.HH:mm:ss} %-5level [%thread] %logger{10}  %msg%n" />
	<property name="console-pattern" value="%d{yyyy-MM-dd HH:mm:ss}|%.-5level|%-40.40logger{0}|%msg%n" />

	<appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
		<encoder>
			<pattern>${console-pattern}</pattern>
			<charset>${encoding}</charset>
		</encoder>
	</appender>

	<appender name="llbUgcDebugAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.dir}/llb.atomikos.debug.log</file>
		<prudent>false</prudent>
		<append>true</append>
		<encoder>
			<pattern>${normal-pattern}</pattern>
			<charset>${encoding}</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<fileNamePattern>${log.dir}/llb.atomikos.debug.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
			<maxHistory>20</maxHistory>
			<cleanHistoryOnStart>true</cleanHistoryOnStart>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!--日志文件最大的大小 -->
				<maxFileSize>1024MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
	</appender>

	<appender name="llbUgcErrorAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<file>${log.dir}/llb.atomikos.error.log</file>
		<prudent>false</prudent>
		<append>true</append>
		<encoder>
			<pattern>${normal-pattern}</pattern>
			<charset>${encoding}</charset>
		</encoder>
		<rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
			<!--日志文件输出的文件名 -->
			<fileNamePattern>${log.dir}/llb.atomikos.error.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
			<maxHistory>20</maxHistory>
			<timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
				<!--日志文件最大的大小 -->
				<maxFileSize>1024MB</maxFileSize>
			</timeBasedFileNamingAndTriggeringPolicy>
		</rollingPolicy>
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<!-- 只打印错误日志 -->
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
	</appender>

    <appender name="llbUgcInfoAppender" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${log.dir}/llb.atomikos.info.log</file>
        <prudent>false</prudent>
        <append>true</append>
        <encoder>
            <pattern>${normal-pattern}</pattern>
            <charset>${encoding}</charset>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--日志文件输出的文件名 -->
            <fileNamePattern>${log.dir}/llb.atomikos.info.%d{yyyy-MM-dd}.log.gz</fileNamePattern>
            <maxHistory>20</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--日志文件最大的大小 -->
                <maxFileSize>1024MB</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <!-- 只打印错误日志 -->
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
        </filter>
    </appender>

	<logger name="com.test.atomikos" level="DEBUG" addtivity="false">
		<appender-ref ref="llbUgcDebugAppender" />
		<appender-ref ref="llbUgcErrorAppender" />
        <appender-ref ref="llbUgcInfoAppender" />
	</logger>
	<!-- 配置打印调试SQL日志  只在测试环境中开启，线上环境关闭 -->
	<logger name="org.apache.ibatis.*" level="DEBUG">
		<appender-ref ref="stdout" />
	</logger>
	<logger name="java.sql.Connection" level="DEBUG">
		<appender-ref ref="stdout" />
	</logger>
	<logger name="java.sql.Statement" level="DEBUG">
		<appender-ref ref="stdout" />
	</logger>
	<logger name="java.sql.PreparedStatement" level="DEBUG">
		<appender-ref ref="stdout" />
	</logger>
	<logger name="java.sql.ResultSet" level="DEBUG">
		<appender-ref ref="stdout" />
	</logger>
	<!-- SQL调试日志配置完毕 -->

	<root level="DEBUG">
		<appender-ref ref="stdout" />
	</root>

</configuration>
